{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Tietokannat harjoitusty\u00f6","text":"<p>Tekij\u00e4: Oliver Paajanen  Opintojakso: Tietokannat TTC2020  Aihe: Varasto tietokanta </p> <p></p>"},{"location":"h0/","title":"Suunnitelma","text":"<p>Tehd\u00e4\u00e4n kuvitteellinen tietokanta yritykselle joka vastaanottaa tilauksia varastolle. Tietokantaan tallentuu tietoja tilatuista tuotteista, tuotteen tiedoista, asiakkaiden tiedoista ja varaston tietoja</p> <p>v 0.1</p> <p>Ensimm\u00e4inen karkea suunnitelma tietokannasta </p> <p></p> <p>My\u00f6hemmin p\u00e4ivitetty ER-kaavio</p> <p>v 0.2</p> <ul> <li>Lis\u00e4tty asiakastietoihin s\u00e4hk\u00f6posti</li> <li>\u00e4\u00e4kk\u00f6set korjattu</li> <li>Yksi-Moneen yhteyksi\u00e4: Asiakas &gt; Tilaus, Tilaus &gt; Tilatut tuotteet, Tuote &gt; Tilatut tuotteet, Varasto &gt; Tuote</li> </ul> <p></p>"},{"location":"h1/","title":"Vaatimusm\u00e4\u00e4rittely","text":"<p>Oliver Paajanen</p> <p>v 0.2</p>"},{"location":"h1/#johdanto","title":"Johdanto","text":"<p>Tietokanta suoritetaan JAMK IT-instituutin kurssille Tietokannat TTC2010-3010. Ty\u00f6n tavoitteena on luoda varastohallintaj\u00e4rjestelm\u00e4, joka tallentaa tuotteiden tietoja ja varastosaldoja. Tavoitteena  luoda tietokanta mist\u00e4 voi hakea varastosta, asiakkailta ja tilauksista tietoa</p>"},{"location":"h1/#yleiskuvaus","title":"Yleiskuvaus","text":"<p>Tietokanta luodaan JAMKin labranetin mariaDB-palvelimelle. Lis\u00e4t\u00e4\u00e4n tietokantaan tietoja ja suoritetaan tietokantaan hakuja toimivuuden testaamiseksi</p>"},{"location":"h1/#toiminnot","title":"Toiminnot","text":"<p>Pakollisia toimintoja ovat:</p> <ol> <li>Tuotteiden yll\u00e4pito. (tuotteen nimi, hinta)  Pakollinen</li> <li>Varastosaldon yll\u00e4pito. (tuotteen nimi, varasto saldo) Pakollinen</li> <li>Asiakastietojen yll\u00e4pito. (yhteystiedot, tilaus) Pakollinen</li> <li>Tilausten yll\u00e4pito. (tilauksen p\u00e4iv\u00e4m\u00e4\u00e4r\u00e4, asiakkaan tiedot) Pakollinen</li> </ol>"},{"location":"h1/#muut-ominaisuudet","title":"Muut ominaisuudet","text":"<ol> <li>Suorituskyky: Vasteajat alle 1 sekunti</li> </ol>"},{"location":"h2/","title":"Tietokanna toteutus","text":"<p>Tietokannan luominen mariaDB-palvelimelle MySQL Workbenchill\u00e4</p> <p>Kaavio</p> <p></p> MySQL luoma scripti tietokannasta <pre><code>\n-- MySQL Workbench Forward Engineering\n\nSET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\nSET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\nSET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\n\n-- -----------------------------------------------------\n-- Schema AB6911\n-- -----------------------------------------------------\n\n-- -----------------------------------------------------\n-- Schema AB6911\n-- -----------------------------------------------------\nCREATE SCHEMA IF NOT EXISTS `AB6911` ;\nUSE `AB6911` ;\n\n-- -----------------------------------------------------\n-- Table `AB6911`.`Asiakas`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `AB6911`.`Asiakas` (\n  `idAsiakas` INT NOT NULL,\n  `nimi` VARCHAR(45) NOT NULL,\n  `puhelin` INT NOT NULL,\n  `email` VARCHAR(45) NOT NULL,\n  PRIMARY KEY (`idAsiakas`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `AB6911`.`Tilaus`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `AB6911`.`Tilaus` (\n  `idTilaus` INT NOT NULL,\n  `pvm` DATE NULL,\n  `Asiakas_idAsiakas` INT NOT NULL,\n  PRIMARY KEY (`idTilaus`, `Asiakas_idAsiakas`),\n  INDEX `fk_Tilaus_Asiakas1_idx` (`Asiakas_idAsiakas` ASC) VISIBLE,\n  CONSTRAINT `fk_Tilaus_Asiakas1`\n    FOREIGN KEY (`Asiakas_idAsiakas`)\n    REFERENCES `AB6911`.`Asiakas` (`idAsiakas`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `AB6911`.`Varasto`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `AB6911`.`Varasto` (\n  `idVarasto` INT NOT NULL AUTO_INCREMENT,\n  `tuote` VARCHAR(45) NOT NULL,\n  `hinta` INT NOT NULL,\n  PRIMARY KEY (`idVarasto`))\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `AB6911`.`Tuote`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `AB6911`.`Tuote` (\n  `idTuote` INT NOT NULL,\n  `nimi` VARCHAR(45) NOT NULL,\n  `hinta` INT NOT NULL,\n  `maara` INT NOT NULL,\n  `Varasto_idVarasto` INT NOT NULL,\n  PRIMARY KEY (`idTuote`, `Varasto_idVarasto`),\n  INDEX `fk_Tuote_Varasto_idx` (`Varasto_idVarasto` ASC) VISIBLE,\n  CONSTRAINT `fk_Tuote_Varasto`\n    FOREIGN KEY (`Varasto_idVarasto`)\n    REFERENCES `AB6911`.`Varasto` (`idVarasto`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\n-- -----------------------------------------------------\n-- Table `AB6911`.`Tilatut_tuotteet`\n-- -----------------------------------------------------\nCREATE TABLE IF NOT EXISTS `AB6911`.`Tilatut_tuotteet` (\n  `idTilatut_tuotteet` INT NOT NULL,\n  `maara` INT NOT NULL,\n  `hinta` INT NOT NULL,\n  `Tuote_idTuote` INT NOT NULL,\n  `Tuote_Varasto_idVarasto` INT NOT NULL,\n  `Tilaus_idTilaus` INT NOT NULL,\n  PRIMARY KEY (`idTilatut_tuotteet`, `Tuote_idTuote`, `Tuote_Varasto_idVarasto`, `Tilaus_idTilaus`),\n  INDEX `fk_Tilatut_tuotteet_Tuote1_idx` (`Tuote_idTuote` ASC, `Tuote_Varasto_idVarasto` ASC) VISIBLE,\n  INDEX `fk_Tilatut_tuotteet_Tilaus1_idx` (`Tilaus_idTilaus` ASC) VISIBLE,\n  CONSTRAINT `fk_Tilatut_tuotteet_Tuote1`\n    FOREIGN KEY (`Tuote_idTuote` , `Tuote_Varasto_idVarasto`)\n    REFERENCES `AB6911`.`Tuote` (`idTuote` , `Varasto_idVarasto`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION,\n  CONSTRAINT `fk_Tilatut_tuotteet_Tilaus1`\n    FOREIGN KEY (`Tilaus_idTilaus`)\n    REFERENCES `AB6911`.`Tilaus` (`idTilaus`)\n    ON DELETE NO ACTION\n    ON UPDATE NO ACTION)\nENGINE = InnoDB;\n\n\nSET SQL_MODE=@OLD_SQL_MODE;\nSET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\nSET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\n\n</code></pre> <p>Testataan toimiiko taulukot</p> <p></p> <p>Lis\u00e4t\u00e4\u00e4n sis\u00e4lt\u00f6\u00e4 tauluihin</p> Komentoja joilla lis\u00e4sin dataa tauluihin <pre><code>\nBEGIN;\n\n# Lis\u00e4t\u00e4\u00e4n varastoon tuotteita\nINSERT INTO Varasto (idVarsto, tuote, hinta) VALUES\n(1, 'Kissa', 100),\n(2, 'WC-Paperi', 4),\n(3, 'Polkupy\u00f6r\u00e4', 200),\n(4, 'Tyyny', 10),\n(5, 'Tietokone', 900);\n\n# Tuotteet\n\nINSERT INTO Tuote (idTuote, nimi, hinta, maara, Varasto_idVarasto) VALUES\n(1, 'Kissa', 100, 3, 1),\n(2, 'WC-Paperi', 4, 10, 2),\n(3, 'Polkupy\u00f6r\u00e4', 200, 5, 3),\n(4, 'Tyyny', 10, 20, 4),\n(5, 'Tietokone', 900, 8, 5);\n\n# Asiakkaat\n\nINSERT INTO Asiakas (idAsiakas, nimi, puhelin, email) VALUES\n(1, 'Kimmo', '044123123', 'asdasd@jee.com'),\n(2, 'Tiina', '123444222', 'moro@juu.com'),\n(3, 'Johannes', '000234123', 'johannes@johannes.com'),\n(4, 'Oliver', '234098123', 'oliver@toissa.com');\n\n# Tilaus\n\nINSERT INTO Tilaus (idTilaus, pvm, Asiakas_idAsiakas) VALUES\n(1, '2020-12-10', 4),\n(2, '2020-10-10', 3),\n(3, '2020-04-24', 2),\n(4, '2020-05-23', 1);\n\n# Tilatut tuotteet\n\nINSERT INTO Tilatut_tuotteet (idTilatut_tuotteet, maara, hinta, Tuote_idTuote, Tuote_Varasto_idWarehouse, Tilaus_idTilaus) VALUES\n(1, 1, 100, 1, 1, 1, 1),\n(2, 2, 8, 2, 2, 2, 2),\n(3, 1, 200, 3, 3, 3, 3),\n(4, 1, 900, 4, 4, 4, 4);\n\nCOMMIT;\n\n</code></pre> <p>N\u00e4kymien luomista</p> N\u00e4kymien lis\u00e4ys <pre><code>\n# Tehd\u00e4\u00e4n n\u00e4kym\u00e4 joka n\u00e4ytt\u00e4\u00e4 asiakkaiden tilaukset\nCREATE VIEW Asiakas_tilaus AS\nSELECT Tilaus.idTilaus, Tilaus.pvm, Asiakas.nimi, Asiakas.puhelin, Asiakas.email\nFROM Tilaus\nJOIN Asiakas ON Tilaus.Asiakas_idAsiakas = Asiakas.idAsiakas;\n\nSELECT * FROM Asiakas_tilaus;\n\n# Tehd\u00e4\u00e4n n\u00e4kym\u00e4 joka n\u00e4ytt\u00e4\u00e4 tuotteet varastossa\nCREATE VIEW Varasto_tuotteet AS\nSELECT Varasto.idVarato, Tuote.nimi AS tuotteen_nimi, Tuote.maara AS tuotteen_maara\nFROM Varasto\nINNER JOIN Tuote ON Varasto.idVarasto = Tuote.Varasto_idVarasto;\n\n# Luodaan n\u00e4kym\u00e4 jossa n\u00e4kyy tilatut tuotteet, m\u00e4\u00e4r\u00e4 ja hinta\nCREATE VIEW Tilaus_tuotteet AS\nSELECT Tilaus.idTilaus, Tilaus.pvm, Asiakas.nimi AS asiakas_nimi, Tilatut_tuotteet.maara AS tilatut_tuotteet_maara,\n       Tilatut_tuotteet.hinta AS tilatut_tuotteet_hinta, Tuote.nimi AS tuotteen_nimi\nFROM Tilaus\nINNER JOIN Asiakas ON Tilaus.Asiakas_idAsiakas = Asiakas.idAsiakas\nINNER JOIN Tilatut_tuotteet ON Tilaus.idTilaus = Tilatut_tuotteet.Tilaus_idTilaus\nINNER JOIN Tuote ON Tilatut_tuotteet.Tuote_idTuote = Tuote.idTuote AND Tilatut_tuotteet.Tuote_Varasto_idVarasto = Tuote.Varasto_idVarasto;\n\n# Luodaan n\u00e4kym\u00e4 josta n\u00e4hd\u00e4\u00e4n asiakkaan rahan kulutus \nCREATE VIEW asiakas_kulutus AS\nSELECT \n    Asiakas.idAsiakas, \n    Asiakas.nimi, \n    SUM(Tilatut_tuotteet.maara * Tilatut_tuotteet.hinta) AS rahan_kulutus\nFROM \n    Asiakas \n    JOIN Tilaus ON Asiakas.idAsiakas = Tilaus.Asiakas_idAsiakas \n    JOIN Tilatut_tuotteet ON Tilaus.idTilaus = Tilatut_tuotteet.Tilaus_idTilaus \nGROUP BY \n    Asiakas.idAsiakas;\n\n# T\u00e4ll\u00e4 n\u00e4kym\u00e4ll\u00e4 n\u00e4hd\u00e4\u00e4n kuinka monta tilausta asiakas on tehnyt\nCREATE VIEW Tilaukset AS\nSELECT \n    Asiakas.idAsiakas, \n    Asiakas.nimi, \n    COUNT(DISTINCT Tilaus.idTilaus) AS Tilaukset\nFROM \n    Asiakas \n    JOIN Tilaus ON Asiakas.idAsiakas = Tilaus.Asiakas_idAsiakas \nGROUP BY \n    Asiakas.idAsiakas;\n\n</code></pre>"},{"location":"h3/","title":"SQL Kyselyit\u00e4","text":""},{"location":"h3/#kokeillaan-onnistuuko-tietojen-hakeminen-tietokannasta","title":"Kokeillaan onnistuuko tietojen hakeminen tietokannasta","text":"<p>Muutama kokeilu tietojen hakemisesta...</p> <p></p> <p>Asiakas tilauksien ja asiakkaiden tietojen hakeminen</p> <p></p> <p>Varaston tuotteiden hakeminen</p> <p></p> <p>Asiakkaiden tilauksien tarkastaminen</p> <p></p> <p>T\u00e4st\u00e4 n\u00e4hd\u00e4\u00e4n kuinka paljon asiakas on k\u00e4ytt\u00e4nyt tilauksiin rahaa </p> <p>Rahan kulutus n\u00e4ytt\u00e4isi toimivan ja summat ovat oikein</p> <p></p> <p>Lis\u00e4t\u00e4\u00e4n varastoon tuote</p> <p></p> <p>Lis\u00e4t\u00e4\u00e4n tilaus</p> <p></p> <p></p>"},{"location":"h4/","title":"Itsearviointi","text":"<p>Henkil\u00f6kohtainen arvosanaehdotus: 3.5 </p> <p>Rooli: Tekij\u00e4 </p> <p>Ajank\u00e4ytt\u00f6: Karkeasti meni ~30h </p> <p>Onnistumiset: Tietokannasta l\u00f6ytyy tarvittavat taulut sis\u00e4lt\u00f6ineen, tarittava m\u00e4\u00e4r\u00e4 esimerkkidataa, lis\u00e4tyt n\u00e4kym\u00e4t ja suoritetut testaukset. </p> <p>Puutteet: Graafiseen k\u00e4ytt\u00f6liittym\u00e4\u00e4 en edes vilkaissut, siihen olisi voinut perehty\u00e4. Olisin voinut laajentaa tietokantaa hieman. </p> <p>Huomioita: Dataa olisi voinut lis\u00e4t\u00e4 enemm\u00e4n.</p>"}]}